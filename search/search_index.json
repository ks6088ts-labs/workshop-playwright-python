{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"workshop-playwright-python","text":""},{"location":"#installation","title":"Installation","text":"<p>To set up the environment, details are provided in Playwright for Python &gt; Installation. In this workshop, we provide a script to install the necessary dependencies.</p> <pre><code>git clone https://github.com/ks6088ts-labs/workshop-playwright-python.git\ncd workshop-playwright-python\n\n# Install the dependencies\nmake install-deps-dev\n</code></pre> <ul> <li>[BUG] Host system is missing dependencies to run browsers (WSL2) #19100</li> </ul>"},{"location":"#fundamentals","title":"Fundamentals","text":"<p>To run some demos, please follow the instructions below.</p> <pre><code># Run tests in verbose mode\nmake test-verbose\n\n# Show traces\nmake show-trace\n\n# Generate code\nmake codegen\n</code></pre> <p>Playwright Trace Viewer provides a way to visualize the execution of Playwright tests, which can be helpful for debugging and understanding test flows.</p>"},{"location":"#guides","title":"Guides","text":""},{"location":"#authentication","title":"Authentication","text":"<ol> <li>Run an application server</li> </ol> <pre><code>docker compose up\n</code></pre> <ol> <li>Run code generator and log in to the app manually.</li> </ol> <pre><code>make codegen\n</code></pre> <ol> <li> <p>Update the generated codes for storing state via <code>context.storage_state()</code> method</p> </li> <li> <p>Run the updated script named as <code>save_context.py</code></p> </li> </ol> <pre><code>uv run scripts/save_context.py\n</code></pre> <ol> <li>Run the following command to access to the app without logging in.</li> </ol> <pre><code>uv run scripts/load_context.py\n</code></pre>"},{"location":"#development","title":"Development","text":"<ul> <li>Web Scraping Google Maps Using Playwright Python And OpenAI API</li> </ul>"},{"location":"#microsoft-playwright-testing","title":"Microsoft Playwright Testing","text":"<ul> <li>Get Started Sample</li> </ul>"},{"location":"#playwright-mcp-server","title":"Playwright MCP server","text":""},{"location":"#repos","title":"Repos","text":"<ul> <li>Microsoft / Playwright MCP server</li> <li>[Feature] Adding codegen feature. #519: \u30b3\u30fc\u30c9\u751f\u6210\u6a5f\u80fd\u306b\u95a2\u3059\u308b\u6a5f\u80fd\u8ffd\u52a0\u306e\u8981\u671b</li> <li>executeautomation/mcp-playwright</li> <li>Code Generation Tools</li> </ul>"},{"location":"#scenarios","title":"Scenarios","text":"<p>Code generation</p> <ul> <li>How to Generate Playwright Tests using MCP + Copilot</li> <li>Blog: Letting Playwright MCP Explore your site and Write your Tests</li> <li>Prompt: Playwright E2E test generator</li> </ul>"},{"location":"#locust","title":"Locust","text":"<ul> <li>Your first test</li> </ul>"},{"location":"#custom-apps","title":"Custom apps","text":""},{"location":"#credentials","title":"Credentials","text":"<p>Run the following command to set up the credentials for the application.</p> <pre><code># Run the application\nuv run streamlit run workshop_playwright_python/apps/streamlit_authentication.py\n</code></pre> <p>To login, type your credentials described in .streamlit/config.yaml and click the \"Login\" button. (e.g. <code>jsmith:abc</code>, <code>rbriggs:def</code>)</p>"},{"location":"#openid-connect","title":"OpenID Connect","text":"<p>To run a frontend application with authentication, you can refer to the following links.</p> <ul> <li>User authentication and information</li> <li>Use Microsoft Entra to authenticate users</li> </ul> <p>For example, you can use the following file .streamlit/secrets.toml to set up authentication with Microsoft Entra ID.</p> <pre><code>[auth]\nredirect_uri = \"http://localhost:8501/oauth2callback\"\ncookie_secret = \"xxx\"\n\n[auth.microsoft]\nclient_id = \"your-client-id\"\nclient_secret = \"your-client-secret\"\nserver_metadata_url = \"https://login.microsoftonline.com/consumers/v2.0/.well-known/openid-configuration\"\n</code></pre> <p>Then, run the application using the following command:</p> <pre><code># Run the application\nuv run streamlit run workshop_playwright_python/apps/authentication.py\n</code></pre>"}]}